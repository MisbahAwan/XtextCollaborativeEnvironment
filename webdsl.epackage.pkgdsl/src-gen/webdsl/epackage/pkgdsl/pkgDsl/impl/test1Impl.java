/**
 * generated by Xtext 2.25.0
 */
package webdsl.epackage.pkgdsl.pkgDsl.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

import webdsl.epackage.pkgdsl.pkgDsl.AC_TimingExpression;
import webdsl.epackage.pkgdsl.pkgDsl.PkgDslPackage;
import webdsl.epackage.pkgdsl.pkgDsl.test1;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>test1</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link webdsl.epackage.pkgdsl.pkgDsl.impl.test1Impl#getUuid <em>Uuid</em>}</li>
 *   <li>{@link webdsl.epackage.pkgdsl.pkgDsl.impl.test1Impl#getShortname <em>Shortname</em>}</li>
 *   <li>{@link webdsl.epackage.pkgdsl.pkgDsl.impl.test1Impl#getCategory <em>Category</em>}</li>
 *   <li>{@link webdsl.epackage.pkgdsl.pkgDsl.impl.test1Impl#getName <em>Name</em>}</li>
 *   <li>{@link webdsl.epackage.pkgdsl.pkgDsl.impl.test1Impl#getScope <em>Scope</em>}</li>
 *   <li>{@link webdsl.epackage.pkgdsl.pkgDsl.impl.test1Impl#getTimingexpression <em>Timingexpression</em>}</li>
 * </ul>
 *
 * @generated
 */
public class test1Impl extends MinimalEObjectImpl.Container implements test1
{
  /**
   * The default value of the '{@link #getUuid() <em>Uuid</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getUuid()
   * @generated
   * @ordered
   */
  protected static final String UUID_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getUuid() <em>Uuid</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getUuid()
   * @generated
   * @ordered
   */
  protected String uuid = UUID_EDEFAULT;

  /**
   * The default value of the '{@link #getShortname() <em>Shortname</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getShortname()
   * @generated
   * @ordered
   */
  protected static final String SHORTNAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getShortname() <em>Shortname</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getShortname()
   * @generated
   * @ordered
   */
  protected String shortname = SHORTNAME_EDEFAULT;

  /**
   * The default value of the '{@link #getCategory() <em>Category</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCategory()
   * @generated
   * @ordered
   */
  protected static final String CATEGORY_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getCategory() <em>Category</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCategory()
   * @generated
   * @ordered
   */
  protected String category = CATEGORY_EDEFAULT;

  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The default value of the '{@link #getScope() <em>Scope</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getScope()
   * @generated
   * @ordered
   */
  protected static final String SCOPE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getScope() <em>Scope</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getScope()
   * @generated
   * @ordered
   */
  protected String scope = SCOPE_EDEFAULT;

  /**
   * The cached value of the '{@link #getTimingexpression() <em>Timingexpression</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTimingexpression()
   * @generated
   * @ordered
   */
  protected EList<AC_TimingExpression> timingexpression;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected test1Impl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return PkgDslPackage.Literals.TEST1;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getUuid()
  {
    return uuid;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setUuid(String newUuid)
  {
    String oldUuid = uuid;
    uuid = newUuid;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PkgDslPackage.TEST1__UUID, oldUuid, uuid));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getShortname()
  {
    return shortname;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setShortname(String newShortname)
  {
    String oldShortname = shortname;
    shortname = newShortname;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PkgDslPackage.TEST1__SHORTNAME, oldShortname, shortname));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getCategory()
  {
    return category;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setCategory(String newCategory)
  {
    String oldCategory = category;
    category = newCategory;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PkgDslPackage.TEST1__CATEGORY, oldCategory, category));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PkgDslPackage.TEST1__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getScope()
  {
    return scope;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setScope(String newScope)
  {
    String oldScope = scope;
    scope = newScope;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PkgDslPackage.TEST1__SCOPE, oldScope, scope));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<AC_TimingExpression> getTimingexpression()
  {
    if (timingexpression == null)
    {
      timingexpression = new EObjectContainmentEList<AC_TimingExpression>(AC_TimingExpression.class, this, PkgDslPackage.TEST1__TIMINGEXPRESSION);
    }
    return timingexpression;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case PkgDslPackage.TEST1__TIMINGEXPRESSION:
        return ((InternalEList<?>)getTimingexpression()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case PkgDslPackage.TEST1__UUID:
        return getUuid();
      case PkgDslPackage.TEST1__SHORTNAME:
        return getShortname();
      case PkgDslPackage.TEST1__CATEGORY:
        return getCategory();
      case PkgDslPackage.TEST1__NAME:
        return getName();
      case PkgDslPackage.TEST1__SCOPE:
        return getScope();
      case PkgDslPackage.TEST1__TIMINGEXPRESSION:
        return getTimingexpression();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case PkgDslPackage.TEST1__UUID:
        setUuid((String)newValue);
        return;
      case PkgDslPackage.TEST1__SHORTNAME:
        setShortname((String)newValue);
        return;
      case PkgDslPackage.TEST1__CATEGORY:
        setCategory((String)newValue);
        return;
      case PkgDslPackage.TEST1__NAME:
        setName((String)newValue);
        return;
      case PkgDslPackage.TEST1__SCOPE:
        setScope((String)newValue);
        return;
      case PkgDslPackage.TEST1__TIMINGEXPRESSION:
        getTimingexpression().clear();
        getTimingexpression().addAll((Collection<? extends AC_TimingExpression>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case PkgDslPackage.TEST1__UUID:
        setUuid(UUID_EDEFAULT);
        return;
      case PkgDslPackage.TEST1__SHORTNAME:
        setShortname(SHORTNAME_EDEFAULT);
        return;
      case PkgDslPackage.TEST1__CATEGORY:
        setCategory(CATEGORY_EDEFAULT);
        return;
      case PkgDslPackage.TEST1__NAME:
        setName(NAME_EDEFAULT);
        return;
      case PkgDslPackage.TEST1__SCOPE:
        setScope(SCOPE_EDEFAULT);
        return;
      case PkgDslPackage.TEST1__TIMINGEXPRESSION:
        getTimingexpression().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case PkgDslPackage.TEST1__UUID:
        return UUID_EDEFAULT == null ? uuid != null : !UUID_EDEFAULT.equals(uuid);
      case PkgDslPackage.TEST1__SHORTNAME:
        return SHORTNAME_EDEFAULT == null ? shortname != null : !SHORTNAME_EDEFAULT.equals(shortname);
      case PkgDslPackage.TEST1__CATEGORY:
        return CATEGORY_EDEFAULT == null ? category != null : !CATEGORY_EDEFAULT.equals(category);
      case PkgDslPackage.TEST1__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case PkgDslPackage.TEST1__SCOPE:
        return SCOPE_EDEFAULT == null ? scope != null : !SCOPE_EDEFAULT.equals(scope);
      case PkgDslPackage.TEST1__TIMINGEXPRESSION:
        return timingexpression != null && !timingexpression.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (uuid: ");
    result.append(uuid);
    result.append(", shortname: ");
    result.append(shortname);
    result.append(", category: ");
    result.append(category);
    result.append(", name: ");
    result.append(name);
    result.append(", scope: ");
    result.append(scope);
    result.append(')');
    return result.toString();
  }

} //test1Impl

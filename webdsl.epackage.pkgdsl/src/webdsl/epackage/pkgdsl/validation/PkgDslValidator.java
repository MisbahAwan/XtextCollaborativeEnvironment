/*
 * generated by Xtext 2.25.0
 */
package webdsl.epackage.pkgdsl.validation;

import org.eclipse.emf.common.util.EList;
import org.eclipse.xtext.validation.Check;

import com.google.common.base.Objects;

import webdsl.epackage.pkgdsl.pkgDsl.Constraints;
import webdsl.epackage.pkgdsl.pkgDsl.Execution_Time_Constraint;
import webdsl.epackage.pkgdsl.pkgDsl.File;
import webdsl.epackage.pkgdsl.pkgDsl.PkgDslPackage;
import webdsl.epackage.pkgdsl.pkgDsl.Timing;

/**
 * This class contains custom validation rules. 
 *
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#validation
 */
public class PkgDslValidator extends AbstractPkgDslValidator {
	
	public static final String INVALID_NAME = "invalidName";

	@Check
	public void checkNameStartsWithCapital(Execution_Time_Constraint etc) {
		if(etc.equals(null)){}else
		{System.out.println("etc.getnam: "+etc.getName());
		    if (!Character.isUpperCase(etc.getName().charAt(0))) {
		        warning("Name should start with a capital",
		            PkgDslPackage.Literals.EXECUTION_TIME_CONSTRAINT__NAME,
		            INVALID_NAME);
		    }
		}   
	}
	
	@Check
	public void checkFeatureNameIsUnique(Execution_Time_Constraint etc) {
	    EList<Execution_Time_Constraint> executionConstraints = ((Constraints) etc.eContainer()).getExecution_time_constraint();//.get.getSuperType();
	    System.out.println("CONSTRAINTS SIZE: "+executionConstraints.size());
	   for (Execution_Time_Constraint other : executionConstraints) {
	            if (Objects.equal(etc.getStart(), other.getStart()) && etc!=other) {
	                error("Execution_Time_Constraint START have to be unique", PkgDslPackage.Literals.EXECUTION_TIME_CONSTRAINT__START);
	                return;
	            }
	        }	
	}
	
	/*@Check
	public void checkFeatureNameIsUnique(Execution_Time_Constraint etc) {
	    EList<Constraints> constraints = ((Timing) etc.eContainer()).getConstraints();//.getExecution_time_constraint();//.get.getSuperType();
	    System.out.println("CONSTRAINTS SIZE: "+constraints.size());
	   for (Constraints other : constraints) 
	   {
		   EList<Execution_Time_Constraint> executionconstraints = other.getExecution_time_constraint();
		   for (Execution_Time_Constraint other2 : executionconstraints) 
		   {
	            if (Objects.equal(etc.getStart(), other2.getStart()) && etc!=other) 
	            {
	                error("Execution_Time_Constraint START have to be unique", PkgDslPackage.Literals.EXECUTION_TIME_CONSTRAINT__START);
	                return;
	            }
		   }
	   }	
	}*/
}

/**
 * generated by Xtext 2.25.0
 */
package webdsl.epackage.pkgdsl.pkgDsl.util;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.common.notify.impl.AdapterFactoryImpl;

import org.eclipse.emf.ecore.EObject;

import webdsl.epackage.pkgdsl.pkgDsl.*;

/**
 * <!-- begin-user-doc -->
 * The <b>Adapter Factory</b> for the model.
 * It provides an adapter <code>createXXX</code> method for each class of the model.
 * <!-- end-user-doc -->
 * @see webdsl.epackage.pkgdsl.pkgDsl.PkgDslPackage
 * @generated
 */
public class PkgDslAdapterFactory extends AdapterFactoryImpl
{
  /**
   * The cached model package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected static PkgDslPackage modelPackage;

  /**
   * Creates an instance of the adapter factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public PkgDslAdapterFactory()
  {
    if (modelPackage == null)
    {
      modelPackage = PkgDslPackage.eINSTANCE;
    }
  }

  /**
   * Returns whether this factory is applicable for the type of the object.
   * <!-- begin-user-doc -->
   * This implementation returns <code>true</code> if the object is either the model's package or is an instance object of the model.
   * <!-- end-user-doc -->
   * @return whether this factory is applicable for the type of the object.
   * @generated
   */
  @Override
  public boolean isFactoryForType(Object object)
  {
    if (object == modelPackage)
    {
      return true;
    }
    if (object instanceof EObject)
    {
      return ((EObject)object).eClass().getEPackage() == modelPackage;
    }
    return false;
  }

  /**
   * The switch that delegates to the <code>createXXX</code> methods.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected PkgDslSwitch<Adapter> modelSwitch =
    new PkgDslSwitch<Adapter>()
    {
      @Override
      public Adapter caseFile(File object)
      {
        return createFileAdapter();
      }
      @Override
      public Adapter caseEA_Package(EA_Package object)
      {
        return createEA_PackageAdapter();
      }
      @Override
      public Adapter caseSub_Package(Sub_Package object)
      {
        return createSub_PackageAdapter();
      }
      @Override
      public Adapter caseNested_Package(Nested_Package object)
      {
        return createNested_PackageAdapter();
      }
      @Override
      public Adapter caseElement(Element object)
      {
        return createElementAdapter();
      }
      @Override
      public Adapter caseElements(Elements object)
      {
        return createElementsAdapter();
      }
      @Override
      public Adapter caseTiming(Timing object)
      {
        return createTimingAdapter();
      }
      @Override
      public Adapter caseConstraints(Constraints object)
      {
        return createConstraintsAdapter();
      }
      @Override
      public Adapter caseReaction_Constraint(Reaction_Constraint object)
      {
        return createReaction_ConstraintAdapter();
      }
      @Override
      public Adapter caseRC_TimingExpression(RC_TimingExpression object)
      {
        return createRC_TimingExpressionAdapter();
      }
      @Override
      public Adapter casePattern_Constraint(Pattern_Constraint object)
      {
        return createPattern_ConstraintAdapter();
      }
      @Override
      public Adapter casePattern_Constraint_TimingExpression(Pattern_Constraint_TimingExpression object)
      {
        return createPattern_Constraint_TimingExpressionAdapter();
      }
      @Override
      public Adapter caseOrder_Constraint(Order_Constraint object)
      {
        return createOrder_ConstraintAdapter();
      }
      @Override
      public Adapter caseExecution_Time_Constraint(Execution_Time_Constraint object)
      {
        return createExecution_Time_ConstraintAdapter();
      }
      @Override
      public Adapter caseETC_TimingExpression(ETC_TimingExpression object)
      {
        return createETC_TimingExpressionAdapter();
      }
      @Override
      public Adapter caseAge_Constraint(Age_Constraint object)
      {
        return createAge_ConstraintAdapter();
      }
      @Override
      public Adapter casetest1(test1 object)
      {
        return createtest1Adapter();
      }
      @Override
      public Adapter caseAC_TimingExpression(AC_TimingExpression object)
      {
        return createAC_TimingExpressionAdapter();
      }
      @Override
      public Adapter caseDelay_Constraint(Delay_Constraint object)
      {
        return createDelay_ConstraintAdapter();
      }
      @Override
      public Adapter caseDC_TimingExpression(DC_TimingExpression object)
      {
        return createDC_TimingExpressionAdapter();
      }
      @Override
      public Adapter casePeriodic_Constraint(Periodic_Constraint object)
      {
        return createPeriodic_ConstraintAdapter();
      }
      @Override
      public Adapter casePC_TimingExpression(PC_TimingExpression object)
      {
        return createPC_TimingExpressionAdapter();
      }
      @Override
      public Adapter caseDescriptions(Descriptions object)
      {
        return createDescriptionsAdapter();
      }
      @Override
      public Adapter caseEvent_Chain(Event_Chain object)
      {
        return createEvent_ChainAdapter();
      }
      @Override
      public Adapter caseEvent_Function_Flow_Port(Event_Function_Flow_Port object)
      {
        return createEvent_Function_Flow_PortAdapter();
      }
      @Override
      public Adapter caseEvent_Function(Event_Function object)
      {
        return createEvent_FunctionAdapter();
      }
      @Override
      public Adapter caseUnit(Unit object)
      {
        return createUnitAdapter();
      }
      @Override
      public Adapter caseQuantity(Quantity object)
      {
        return createQuantityAdapter();
      }
      @Override
      public Adapter caseEA_Numerical(EA_Numerical object)
      {
        return createEA_NumericalAdapter();
      }
      @Override
      public Adapter defaultCase(EObject object)
      {
        return createEObjectAdapter();
      }
    };

  /**
   * Creates an adapter for the <code>target</code>.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param target the object to adapt.
   * @return the adapter for the <code>target</code>.
   * @generated
   */
  @Override
  public Adapter createAdapter(Notifier target)
  {
    return modelSwitch.doSwitch((EObject)target);
  }


  /**
   * Creates a new adapter for an object of class '{@link webdsl.epackage.pkgdsl.pkgDsl.File <em>File</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see webdsl.epackage.pkgdsl.pkgDsl.File
   * @generated
   */
  public Adapter createFileAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link webdsl.epackage.pkgdsl.pkgDsl.EA_Package <em>EA Package</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see webdsl.epackage.pkgdsl.pkgDsl.EA_Package
   * @generated
   */
  public Adapter createEA_PackageAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link webdsl.epackage.pkgdsl.pkgDsl.Sub_Package <em>Sub Package</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see webdsl.epackage.pkgdsl.pkgDsl.Sub_Package
   * @generated
   */
  public Adapter createSub_PackageAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link webdsl.epackage.pkgdsl.pkgDsl.Nested_Package <em>Nested Package</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see webdsl.epackage.pkgdsl.pkgDsl.Nested_Package
   * @generated
   */
  public Adapter createNested_PackageAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link webdsl.epackage.pkgdsl.pkgDsl.Element <em>Element</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see webdsl.epackage.pkgdsl.pkgDsl.Element
   * @generated
   */
  public Adapter createElementAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link webdsl.epackage.pkgdsl.pkgDsl.Elements <em>Elements</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see webdsl.epackage.pkgdsl.pkgDsl.Elements
   * @generated
   */
  public Adapter createElementsAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link webdsl.epackage.pkgdsl.pkgDsl.Timing <em>Timing</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see webdsl.epackage.pkgdsl.pkgDsl.Timing
   * @generated
   */
  public Adapter createTimingAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link webdsl.epackage.pkgdsl.pkgDsl.Constraints <em>Constraints</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see webdsl.epackage.pkgdsl.pkgDsl.Constraints
   * @generated
   */
  public Adapter createConstraintsAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link webdsl.epackage.pkgdsl.pkgDsl.Reaction_Constraint <em>Reaction Constraint</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see webdsl.epackage.pkgdsl.pkgDsl.Reaction_Constraint
   * @generated
   */
  public Adapter createReaction_ConstraintAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link webdsl.epackage.pkgdsl.pkgDsl.RC_TimingExpression <em>RC Timing Expression</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see webdsl.epackage.pkgdsl.pkgDsl.RC_TimingExpression
   * @generated
   */
  public Adapter createRC_TimingExpressionAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link webdsl.epackage.pkgdsl.pkgDsl.Pattern_Constraint <em>Pattern Constraint</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see webdsl.epackage.pkgdsl.pkgDsl.Pattern_Constraint
   * @generated
   */
  public Adapter createPattern_ConstraintAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link webdsl.epackage.pkgdsl.pkgDsl.Pattern_Constraint_TimingExpression <em>Pattern Constraint Timing Expression</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see webdsl.epackage.pkgdsl.pkgDsl.Pattern_Constraint_TimingExpression
   * @generated
   */
  public Adapter createPattern_Constraint_TimingExpressionAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link webdsl.epackage.pkgdsl.pkgDsl.Order_Constraint <em>Order Constraint</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see webdsl.epackage.pkgdsl.pkgDsl.Order_Constraint
   * @generated
   */
  public Adapter createOrder_ConstraintAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link webdsl.epackage.pkgdsl.pkgDsl.Execution_Time_Constraint <em>Execution Time Constraint</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see webdsl.epackage.pkgdsl.pkgDsl.Execution_Time_Constraint
   * @generated
   */
  public Adapter createExecution_Time_ConstraintAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link webdsl.epackage.pkgdsl.pkgDsl.ETC_TimingExpression <em>ETC Timing Expression</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see webdsl.epackage.pkgdsl.pkgDsl.ETC_TimingExpression
   * @generated
   */
  public Adapter createETC_TimingExpressionAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link webdsl.epackage.pkgdsl.pkgDsl.Age_Constraint <em>Age Constraint</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see webdsl.epackage.pkgdsl.pkgDsl.Age_Constraint
   * @generated
   */
  public Adapter createAge_ConstraintAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link webdsl.epackage.pkgdsl.pkgDsl.test1 <em>test1</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see webdsl.epackage.pkgdsl.pkgDsl.test1
   * @generated
   */
  public Adapter createtest1Adapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link webdsl.epackage.pkgdsl.pkgDsl.AC_TimingExpression <em>AC Timing Expression</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see webdsl.epackage.pkgdsl.pkgDsl.AC_TimingExpression
   * @generated
   */
  public Adapter createAC_TimingExpressionAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link webdsl.epackage.pkgdsl.pkgDsl.Delay_Constraint <em>Delay Constraint</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see webdsl.epackage.pkgdsl.pkgDsl.Delay_Constraint
   * @generated
   */
  public Adapter createDelay_ConstraintAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link webdsl.epackage.pkgdsl.pkgDsl.DC_TimingExpression <em>DC Timing Expression</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see webdsl.epackage.pkgdsl.pkgDsl.DC_TimingExpression
   * @generated
   */
  public Adapter createDC_TimingExpressionAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link webdsl.epackage.pkgdsl.pkgDsl.Periodic_Constraint <em>Periodic Constraint</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see webdsl.epackage.pkgdsl.pkgDsl.Periodic_Constraint
   * @generated
   */
  public Adapter createPeriodic_ConstraintAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link webdsl.epackage.pkgdsl.pkgDsl.PC_TimingExpression <em>PC Timing Expression</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see webdsl.epackage.pkgdsl.pkgDsl.PC_TimingExpression
   * @generated
   */
  public Adapter createPC_TimingExpressionAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link webdsl.epackage.pkgdsl.pkgDsl.Descriptions <em>Descriptions</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see webdsl.epackage.pkgdsl.pkgDsl.Descriptions
   * @generated
   */
  public Adapter createDescriptionsAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link webdsl.epackage.pkgdsl.pkgDsl.Event_Chain <em>Event Chain</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see webdsl.epackage.pkgdsl.pkgDsl.Event_Chain
   * @generated
   */
  public Adapter createEvent_ChainAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link webdsl.epackage.pkgdsl.pkgDsl.Event_Function_Flow_Port <em>Event Function Flow Port</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see webdsl.epackage.pkgdsl.pkgDsl.Event_Function_Flow_Port
   * @generated
   */
  public Adapter createEvent_Function_Flow_PortAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link webdsl.epackage.pkgdsl.pkgDsl.Event_Function <em>Event Function</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see webdsl.epackage.pkgdsl.pkgDsl.Event_Function
   * @generated
   */
  public Adapter createEvent_FunctionAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link webdsl.epackage.pkgdsl.pkgDsl.Unit <em>Unit</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see webdsl.epackage.pkgdsl.pkgDsl.Unit
   * @generated
   */
  public Adapter createUnitAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link webdsl.epackage.pkgdsl.pkgDsl.Quantity <em>Quantity</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see webdsl.epackage.pkgdsl.pkgDsl.Quantity
   * @generated
   */
  public Adapter createQuantityAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link webdsl.epackage.pkgdsl.pkgDsl.EA_Numerical <em>EA Numerical</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see webdsl.epackage.pkgdsl.pkgDsl.EA_Numerical
   * @generated
   */
  public Adapter createEA_NumericalAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for the default case.
   * <!-- begin-user-doc -->
   * This default implementation returns null.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @generated
   */
  public Adapter createEObjectAdapter()
  {
    return null;
  }

} //PkgDslAdapterFactory

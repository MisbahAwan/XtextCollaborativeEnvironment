/*
 * generated by Xtext 2.25.0
 */
package webdsl.epackage.pkgdsl.ui.contentassist;

import java.util.ArrayList;

import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.ui.editor.contentassist.ContentAssistContext;
import org.eclipse.xtext.ui.editor.contentassist.ICompletionProposalAcceptor;
import webdsl.epackage.pkgdsl.xml_context;

import com.google.inject.Inject;

/**
 * See https://www.eclipse.org/Xtext/documentation/310_eclipse_support.html#content-assist
 * on how to customize the content assistant.
 */
public class PkgDslProposalProvider extends AbstractPkgDslProposalProvider {
	
/*	@Inject extension PkgDslGrammarAccess;
	override complete_DependsOn(EObject model, RuleCall ruleCall, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
		dependsOnAccess.group.createKeywordProposal(context,acceptor)
	}
	override complete_IsComposedOf(EObject model, RuleCall ruleCall, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
		isComposedOfAccess.group.createKeywordProposal(context,acceptor)
	}
	
	def createKeywordProposal(Group group, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
		if (group == null) {
			return null
		}
		val proposalString = group.elements.filter(Keyword).map[value].join(" ") + " "
		acceptor.accept(createCompletionProposal(proposalString, proposalString, null, context))
	}
    
	//public void completeAge_Constraint_Define(EObject model, RuleCall ruleCall, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
	/*public void completeAge_Constraint_Define(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
		acceptor.accept(createCompletionProposal("ami", context));
	  	acceptor.accept(createCompletionProposal("abu", context));
	  		}
	*/
	public void completeAge_Constraint_Test(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {

//	public void completeAge_Constraint_Test(EObject model, RuleCall ruleCall, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
		// subclasses may override
		//System.out.println("EOOBJECT"+ model.toString());
		//System.out.println("RULE CALL"+ ruleCall.toString());
		//completeTest1_Uuid()
		
		acceptor.accept(createCompletionProposal("UUID:\"\" SHORT-NAME:\" \" CATEGORY:\"\" NAME:\"\"SCOPE:\"Scope\" }", context));
	  	//acceptor.accept(createCompletionProposal("mistry 2", context));
	}
	
	 xml_context t = new xml_context();
		
	 ArrayList<ArrayList<String>> arr =   new ArrayList<ArrayList<String> >(t.size);
	 
//	 public void completeTimingExpression_Name(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
//		 acceptor.accept(createCompletionProposal('"'+"JITTER"+'"',context));
//		 acceptor.accept(createCompletionProposal('"'+"PERIOD"+'"',context));
//		 acceptor.accept(createCompletionProposal('"'+"MINIMUM"+'"',context));
//		}
//		public void completeTimingExpression_Type(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
//			acceptor.accept(createCompletionProposal('"'+"EA-BOOLEAN"+'"',context));
//			acceptor.accept(createCompletionProposal('"'+"EA-NUMERICAL"+'"',context));
//			acceptor.accept(createCompletionProposal('"'+"RANGEABLE-VALUE-TYPE"+'"',context));
//		}
//		public void completeTimingExpression_Value(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
//			arr = t.parse();
//			for (int j = 0; j < arr.get(1).size(); j++) {
//			acceptor.accept(createCompletionProposal('"'+arr.get(1).get(j)+'"',context));
//					// System.out.println("array item "+arr.get(i).get(j));
//			} 
//			for (int j = 0; j < arr.get(12).size(); j++) {
//				acceptor.accept(createCompletionProposal('"'+arr.get(12).get(j)+'"',context));
//						// System.out.println("array item "+arr.get(i).get(j));
//				} 
//			for (int j = 0; j < arr.get(13).size(); j++) {
//				acceptor.accept(createCompletionProposal('"'+arr.get(13).get(j)+'"',context));
//						// System.out.println("array item "+arr.get(i).get(j));
//				} 
//			acceptor.accept(createCompletionProposal('"'+"/Extension/Extensions/Timing/Timing/Customized"+'"',context));
//			
//		}
	 public void completeEvent_Function_Flow_Port_Func_type(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
		    acceptor.accept(createCompletionProposal('"'+"EA-BOOLEAN"+'"',context));
			acceptor.accept(createCompletionProposal('"'+"EA-NUMERICAL"+'"',context));
			acceptor.accept(createCompletionProposal('"'+"RANGEABLE-VALUE-TYPE"+'"',context));
		}
		public void completeEvent_Function_Flow_Port_Func_value(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
			arr = t.parse();
			for (int j = 0; j < arr.get(1).size(); j++) {
			acceptor.accept(createCompletionProposal('"'+arr.get(1).get(j)+'"',context));
					// System.out.println("array item "+arr.get(i).get(j));
			} 
			for (int j = 0; j < arr.get(12).size(); j++) {
				acceptor.accept(createCompletionProposal('"'+arr.get(12).get(j)+'"',context));
						// System.out.println("array item "+arr.get(i).get(j));
				} 
			for (int j = 0; j < arr.get(13).size(); j++) {
				acceptor.accept(createCompletionProposal('"'+arr.get(13).get(j)+'"',context));
						// System.out.println("array item "+arr.get(i).get(j));
				} 
			acceptor.accept(createCompletionProposal('"'+"/Extension/Extensions/Timing/Timing/Period"+'"',context));
		}
		public void completeEvent_Function_Func_type(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
			acceptor.accept(createCompletionProposal('"'+"LOCAL-DEVICE-MANAGER"+'"',context));
			 acceptor.accept(createCompletionProposal('"'+"BASIC-SOFTWARE-FUNCTION-TYPE"+'"',context));
			 acceptor.accept(createCompletionProposal('"'+"HARDWARE-FUNCTION-TYPE"+'"',context));
			 acceptor.accept(createCompletionProposal('"'+"DESIGN-FUNCTION-TYPE "+'"',context));
		}
		
		public void completeETC_TimingExpression_Name(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
			acceptor.accept(createCompletionProposal('"'+"LOWER"+'"',context));
			 acceptor.accept(createCompletionProposal('"'+"UPPER"+'"',context));
		}
		public void completeETC_TimingExpression_Type(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
			acceptor.accept(createCompletionProposal('"'+"EA-BOOLEAN"+'"',context));
			acceptor.accept(createCompletionProposal('"'+"EA-NUMERICAL"+'"',context));
			acceptor.accept(createCompletionProposal('"'+"RANGEABLE-VALUE-TYPE"+'"',context));
		}
		public void completeETC_TimingExpression_Value(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
			arr = t.parse();
			for (int j = 0; j < arr.get(1).size(); j++) {
			acceptor.accept(createCompletionProposal('"'+arr.get(1).get(j)+'"',context));
					// System.out.println("array item "+arr.get(i).get(j));
			} 
			for (int j = 0; j < arr.get(12).size(); j++) {
				acceptor.accept(createCompletionProposal('"'+arr.get(12).get(j)+'"',context));
						// System.out.println("array item "+arr.get(i).get(j));
				} 
			for (int j = 0; j < arr.get(13).size(); j++) {
				acceptor.accept(createCompletionProposal('"'+arr.get(13).get(j)+'"',context));
						// System.out.println("array item "+arr.get(i).get(j));
				} 
			acceptor.accept(createCompletionProposal('"'+"/Extension/Extensions/Timing/Timing/Period"+'"',context));
		}
		
		public void completeAC_TimingExpression_Name(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
			acceptor.accept(createCompletionProposal('"'+"MINIMUM"+'"',context));
			 acceptor.accept(createCompletionProposal('"'+"MAXIMUM"+'"',context));
		}
		public void completeAC_TimingExpression_Type(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
			acceptor.accept(createCompletionProposal('"'+"EA-BOOLEAN"+'"',context));
			acceptor.accept(createCompletionProposal('"'+"EA-NUMERICAL"+'"',context));
			acceptor.accept(createCompletionProposal('"'+"RANGEABLE-VALUE-TYPE"+'"',context));
		}
		
		public void completeAC_TimingExpression_Value(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
			arr = t.parse();
			for (int j = 0; j < arr.get(1).size(); j++) {
			acceptor.accept(createCompletionProposal('"'+arr.get(1).get(j)+'"',context));
					// System.out.println("array item "+arr.get(i).get(j));
			} 
			for (int j = 0; j < arr.get(12).size(); j++) {
				acceptor.accept(createCompletionProposal('"'+arr.get(12).get(j)+'"',context));
						// System.out.println("array item "+arr.get(i).get(j));
				} 
			for (int j = 0; j < arr.get(13).size(); j++) {
				acceptor.accept(createCompletionProposal('"'+arr.get(13).get(j)+'"',context));
						// System.out.println("array item "+arr.get(i).get(j));
				} 
			acceptor.accept(createCompletionProposal('"'+"/Extension/Extensions/Timing/Timing/Period"+'"',context));
		}
		
		public void completeDC_TimingExpression_Name(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
			acceptor.accept(createCompletionProposal('"'+"LOWER"+'"',context));
			 acceptor.accept(createCompletionProposal('"'+"UPPER"+'"',context));
		}
		public void completeDC_TimingExpression_Type(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
			acceptor.accept(createCompletionProposal('"'+"EA-BOOLEAN"+'"',context));
			acceptor.accept(createCompletionProposal('"'+"EA-NUMERICAL"+'"',context));
			acceptor.accept(createCompletionProposal('"'+"RANGEABLE-VALUE-TYPE"+'"',context));
		}
		public void completeDC_TimingExpression_Value(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
			arr = t.parse();
			for (int j = 0; j < arr.get(1).size(); j++) {
			acceptor.accept(createCompletionProposal('"'+arr.get(1).get(j)+'"',context));
					// System.out.println("array item "+arr.get(i).get(j));
			} 
			for (int j = 0; j < arr.get(12).size(); j++) {
				acceptor.accept(createCompletionProposal('"'+arr.get(12).get(j)+'"',context));
						// System.out.println("array item "+arr.get(i).get(j));
				} 
			for (int j = 0; j < arr.get(13).size(); j++) {
				acceptor.accept(createCompletionProposal('"'+arr.get(13).get(j)+'"',context));
						// System.out.println("array item "+arr.get(i).get(j));
				} 
			acceptor.accept(createCompletionProposal('"'+"/Extension/Extensions/Timing/Timing/Period"+'"',context));
		}
		
		public void completePC_TimingExpression_Name(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
			acceptor.accept(createCompletionProposal('"'+"JITTER"+'"',context));
			 acceptor.accept(createCompletionProposal('"'+"PERIOD"+'"',context));
			 acceptor.accept(createCompletionProposal('"'+"MINIMUM"+'"',context));
		}
		public void completePC_TimingExpression_Type(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
			acceptor.accept(createCompletionProposal('"'+"EA-BOOLEAN"+'"',context));
			acceptor.accept(createCompletionProposal('"'+"EA-NUMERICAL"+'"',context));
			acceptor.accept(createCompletionProposal('"'+"RANGEABLE-VALUE-TYPE"+'"',context));
		}
		public void completePC_TimingExpression_Value(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
			arr = t.parse();
			for (int j = 0; j < arr.get(1).size(); j++) {
			acceptor.accept(createCompletionProposal('"'+arr.get(1).get(j)+'"',context));
					// System.out.println("array item "+arr.get(i).get(j));
			} 
			for (int j = 0; j < arr.get(12).size(); j++) {
				acceptor.accept(createCompletionProposal('"'+arr.get(12).get(j)+'"',context));
						// System.out.println("array item "+arr.get(i).get(j));
				} 
			for (int j = 0; j < arr.get(13).size(); j++) {
				acceptor.accept(createCompletionProposal('"'+arr.get(13).get(j)+'"',context));
						// System.out.println("array item "+arr.get(i).get(j));
				} 
			acceptor.accept(createCompletionProposal('"'+"/Extension/Extensions/Timing/Timing/Period"+'"',context));
		}
		
		public void completeRC_TimingExpression_Name(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
			acceptor.accept(createCompletionProposal('"'+"MINIMUM"+'"',context));
			 acceptor.accept(createCompletionProposal('"'+"MAXIMUM"+'"',context));
		}
		public void completeRC_TimingExpression_Type(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
			acceptor.accept(createCompletionProposal('"'+"EA-BOOLEAN"+'"',context));
			acceptor.accept(createCompletionProposal('"'+"EA-NUMERICAL"+'"',context));
			acceptor.accept(createCompletionProposal('"'+"RANGEABLE-VALUE-TYPE"+'"',context));
		}
		public void completeRC_TimingExpression_Value(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
			arr = t.parse();
			for (int j = 0; j < arr.get(1).size(); j++) {
			acceptor.accept(createCompletionProposal('"'+arr.get(1).get(j)+'"',context));
					// System.out.println("array item "+arr.get(i).get(j));
			} 
			for (int j = 0; j < arr.get(12).size(); j++) {
				acceptor.accept(createCompletionProposal('"'+arr.get(12).get(j)+'"',context));
						// System.out.println("array item "+arr.get(i).get(j));
				} 
			for (int j = 0; j < arr.get(13).size(); j++) {
				acceptor.accept(createCompletionProposal('"'+arr.get(13).get(j)+'"',context));
						// System.out.println("array item "+arr.get(i).get(j));
				} 
			acceptor.accept(createCompletionProposal('"'+"/Extension/Extensions/Timing/Timing/Period"+'"',context));
		}
		
		public void completePattern_Constraint_TimingExpression_Name(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
			 acceptor.accept(createCompletionProposal('"'+"JITTER"+'"',context));
			 acceptor.accept(createCompletionProposal('"'+"PERIOD"+'"',context));
			 acceptor.accept(createCompletionProposal('"'+"MINIMUM"+'"',context));
			 acceptor.accept(createCompletionProposal('"'+"OFFSET"+'"',context));
		}
		public void completePattern_Constraint_TimingExpression_Type(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
			acceptor.accept(createCompletionProposal('"'+"EA-BOOLEAN"+'"',context));
			acceptor.accept(createCompletionProposal('"'+"EA-NUMERICAL"+'"',context));
			acceptor.accept(createCompletionProposal('"'+"RANGEABLE-VALUE-TYPE"+'"',context));
		}
		public void completePattern_Constraint_TimingExpression_Value(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
			arr = t.parse();
			for (int j = 0; j < arr.get(1).size(); j++) {
			acceptor.accept(createCompletionProposal('"'+arr.get(1).get(j)+'"',context));
					// System.out.println("array item "+arr.get(i).get(j));
			} 
			for (int j = 0; j < arr.get(12).size(); j++) {
				acceptor.accept(createCompletionProposal('"'+arr.get(12).get(j)+'"',context));
						// System.out.println("array item "+arr.get(i).get(j));
				} 
			for (int j = 0; j < arr.get(13).size(); j++) {
				acceptor.accept(createCompletionProposal('"'+arr.get(13).get(j)+'"',context));
						// System.out.println("array item "+arr.get(i).get(j));
				} 
			acceptor.accept(createCompletionProposal('"'+"/Extension/Extensions/Timing/Timing/Period"+'"',context));
		}

//	 public void completeEA_Package_Define(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
//		 acceptor.accept(createCompletionProposal("Define",context));
//		}
//	 
//	 public void completeSub_Package_Define(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
//		 acceptor.accept(createCompletionProposal("Define",context));
//		}
//	 
//	 public void completeNested_Package_Define(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
//		 acceptor.accept(createCompletionProposal("Define",context));
//		}
//	 
//	 public void completeElement_Define(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
//		 acceptor.accept(createCompletionProposal("Define",context));
//		}
//	 
//		public void completeUnit_Define(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
//			acceptor.accept(createCompletionProposal("Define",context));
//		}
//		
//		public void completeQuantity_Define(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
//			acceptor.accept(createCompletionProposal("Define",context));
//		}
//		
//		public void completeEA_Numerical_Define(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
//			acceptor.accept(createCompletionProposal("Define",context));
//		}
//		
//		public void completeElements_Define(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
//			acceptor.accept(createCompletionProposal("Define",context));
//		}
//		
//		public void completeTiming_Define(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
//			acceptor.accept(createCompletionProposal("Define",context));
//		}
//		
//		public void completeConstraints_Define(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
//			acceptor.accept(createCompletionProposal("Define",context));
//		}
//		
//		public void completeExecution_Time_Constraint_Define(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
//			acceptor.accept(createCompletionProposal("Define",context));
//		}
//		
//		public void completeAge_Constraint_Define(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
//			acceptor.accept(createCompletionProposal("Define",context));
//		}
//		
//		public void completeDelay_Constraint_Define(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
//			acceptor.accept(createCompletionProposal("Define",context));
//		}
//		
//		public void completePeriodic_Constraint_Define(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
//			acceptor.accept(createCompletionProposal("Define",context));
//		}
//		
//		public void completeDescriptions_Define(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
//			acceptor.accept(createCompletionProposal("Define",context));
//		}
//		
//		public void completeEvent_Chain_Define(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
//			acceptor.accept(createCompletionProposal("Define",context));
//		}
//		
//		public void completeEvent_Function_Flow_Port_Define(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
//			acceptor.accept(createCompletionProposal("Define",context));
//		}
//		
//		public void completeEvent_Function_Define(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
//			acceptor.accept(createCompletionProposal("Define",context));
//		}
//	 public void completeAttribute_Verb(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
//		 acceptor.accept(createCompletionProposal("and",context));
//		 acceptor.accept(createCompletionProposal("Other_properties_are",context));
//		}
	 
	 public void completeAttribute_AttributeName(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
		// acceptor.accept(createCompletionProposal('"'+"SHORT-NAME"+'"',context));	
		// acceptor.accept(createCompletionProposal('"'+"CATEGORY"+'"',context));	
		// acceptor.accept(createCompletionProposal('"'+"NAME"+'"',context));	
		 acceptor.accept(createCompletionProposal('"'+"OWNED-RELATIONSHIPS"+'"',context));	
		 
		}
	 public void completeTiming_Attribute_AttributeName(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
	//	 acceptor.accept(createCompletionProposal("TRACEABLE-SPECIFICATION-REFS",context));	
		}
	 
	 public void completeExecution_Time_Constraint_Attribute_AttributeName(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
       //  acceptor.accept(createCompletionProposal("RESUME-REFS",context));	
		 //acceptor.accept(createCompletionProposal("PREEMPTION-REFS",context));;
		}
	 
	 public void completeEvent_Chain_Attribute_AttributeName(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
         //acceptor.accept(createCompletionProposal("SEGMENT-REFS",context));	
		}
	 
	 public void completeUnit_Attribute_AttributeName(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
        // acceptor.accept(createCompletionProposal("FACTOR",context));	
		// acceptor.accept(createCompletionProposal("SYMBOL",context));	
		// acceptor.accept(createCompletionProposal("OFFSET",context));
		}
	 
	 public void completeQuantity_Attribute_AttributeName(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
		// acceptor.accept(createCompletionProposal("AMOUNT-OF-SUBSTANCE-EXP",context));	
		// acceptor.accept(createCompletionProposal("ELECTRIC-CURRENT-EXP",context));	
		 //acceptor.accept(createCompletionProposal("LENGTH-EXP",context));	
		 //acceptor.accept(createCompletionProposal("LUMINOUS-INTENSITY-EXP",context));	
		// acceptor.accept(createCompletionProposal("MASS-EXP",context));	
		// acceptor.accept(createCompletionProposal("THERMODYNAMIC-TEMPERATURE-EXP",context));	
		 //acceptor.accept(createCompletionProposal("TIME-EXP",context));
		}
	 
	 public void completeEA_Numerical_Attribute_AttributeName(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
         //acceptor.accept(createCompletionProposal("TEXT",context));	
		// acceptor.accept(createCompletionProposal("MAX",context));	
		// acceptor.accept(createCompletionProposal("MIN",context));	
		}
//	 public void completeElement_Verb(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
//		 acceptor.accept(createCompletionProposal("of",context));
//		}
//	 
//	 public void completeElements_Verb(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
//		 acceptor.accept(createCompletionProposal("of",context));
//		}
		
		
		
//		public void completeTiming_Verb(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
//			acceptor.accept(createCompletionProposal("with",context));
//			acceptor.accept(createCompletionProposal("having",context));
//		}

//		public void completeQuantity_ref_Define(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
//			acceptor.accept(createCompletionProposal("Define",context));
//		}
//		public void completeStart_Ref_Define(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
//			acceptor.accept(createCompletionProposal("Define",context));
//		}
//		public void completeScope_Ref_Define(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
//			acceptor.accept(createCompletionProposal("Define",context));
//		}
//		public void completeTarget_Ref_Define(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
//			acceptor.accept(createCompletionProposal("Define",context));
//		}
//		
//		public void completeSource_Ref_Define(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
//			acceptor.accept(createCompletionProposal("Define",context));
//		}
//		public void completeEvent_Ref_Define(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
//			acceptor.accept(createCompletionProposal("Define",context));
//		}
//		public void completeResponse_Ref_Define(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
//			acceptor.accept(createCompletionProposal("Define",context));
//		}
//		public void completeStimulus_Ref_Define(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
//			acceptor.accept(createCompletionProposal("Define",context));
//		}
//		public void completePort_IREF_Define(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
//			acceptor.accept(createCompletionProposal("Define",context));
//		}
//		public void completeFunction_Type_Ref_Define(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
//			acceptor.accept(createCompletionProposal("Define",context));
//		}
//		public void completeFunction_IREF_Define(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
//			acceptor.accept(createCompletionProposal("Define",context));
//		}
//		public void completePeriod_Define(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
//			acceptor.accept(createCompletionProposal("Define",context));
//		}
//		public void completeStart_Ref_Verb(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
//			acceptor.accept(createCompletionProposal("with",context));
//			acceptor.accept(createCompletionProposal("having",context));
//		}
//		public void completeScope_Ref_Verb(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
//			acceptor.accept(createCompletionProposal("with",context));
//			acceptor.accept(createCompletionProposal("having",context));
//		}
		
//		public void completeTarget_Ref_Verb(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
//			acceptor.accept(createCompletionProposal("with",context));
//			acceptor.accept(createCompletionProposal("having",context));
//		}
//		
//		public void completeSource_Ref_Verb(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
//			acceptor.accept(createCompletionProposal("with",context));
//			acceptor.accept(createCompletionProposal("having",context));
//		}
//		
//		public void completeConstraints_Verb(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
//			acceptor.accept(createCompletionProposal("with",context));
//			acceptor.accept(createCompletionProposal("having",context));
//			acceptor.accept(createCompletionProposal("of",context));
//		}
//		
//		public void completeDescriptions_Verb(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
//			acceptor.accept(createCompletionProposal("with",context));
//			acceptor.accept(createCompletionProposal("having",context));
//			acceptor.accept(createCompletionProposal("of",context));
//		}
			
//		public void completePeriodic_Constraint_Verb(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
//			acceptor.accept(createCompletionProposal("with",context));
//			acceptor.accept(createCompletionProposal("having",context));
//		}
//		
		
//		public void completeEvent_Ref_Verb(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
//			acceptor.accept(createCompletionProposal("with",context));
//			acceptor.accept(createCompletionProposal("having",context));
//		}
		
		
		
//		public void completePeriod_Verb(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
//			acceptor.accept(createCompletionProposal("with",context));
//			acceptor.accept(createCompletionProposal("having",context));
//		}
//		
//		public void completeType_Tref_Verb(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
//			acceptor.accept(createCompletionProposal("with",context));
//			acceptor.accept(createCompletionProposal("having",context));
//		}
		
		
//		public void completeEvent_Chain_Verb(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
//			acceptor.accept(createCompletionProposal("with",context));
//			acceptor.accept(createCompletionProposal("having",context));
//		}
		
		
//		public void completeResponse_Ref_Verb(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
//			acceptor.accept(createCompletionProposal("with",context));
//			acceptor.accept(createCompletionProposal("having",context));
//		}
		
		
//		public void completeStimulus_Ref_Verb(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
//			acceptor.accept(createCompletionProposal("with",context));
//			acceptor.accept(createCompletionProposal("having",context));
//		}
		
		
		
//		public void completeFunction_Flow_Port_Ref_Name(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
//			acceptor.accept(createCompletionProposal("with",context));
//			acceptor.accept(createCompletionProposal("having",context));
//		}
//		
//		public void completeFunction_Flow_Port_Ref_Verb(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
//			acceptor.accept(createCompletionProposal("with",context));
//			acceptor.accept(createCompletionProposal("having",context));
//			acceptor.accept(createCompletionProposal("and",context));
//		}
//		
//		public void completeFunction_Prototype_Ref_Name(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
//			acceptor.accept(createCompletionProposal("with",context));
//			acceptor.accept(createCompletionProposal("having",context));
//		}
//		
//		public void completeFunction_Prototype_Ref_Verb(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
//			acceptor.accept(createCompletionProposal("with",context));
//			acceptor.accept(createCompletionProposal("having",context));
//		}
		
		
//		public void completeEvent_Function_Verb(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
//			acceptor.accept(createCompletionProposal("with",context));
//			acceptor.accept(createCompletionProposal("having",context));
//		}
		
		
//		public void completeFunction_Type_Ref_Verb(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
//			acceptor.accept(createCompletionProposal("with",context));
//			acceptor.accept(createCompletionProposal("having",context));
//		}
		
		
//		public void completeFunction_Prototype_Target_Ref_Verb(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
//			acceptor.accept(createCompletionProposal("with",context));
//			acceptor.accept(createCompletionProposal("having",context));
//		}
//		public void completeFunction_Prototype_Context_Ref_Name(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
//			acceptor.accept(createCompletionProposal("with",context));
//			acceptor.accept(createCompletionProposal("having",context));
//		}
//		
//		public void completeFunction_Prototype_Context_Ref_Verb(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
//			acceptor.accept(createCompletionProposal("with",context));
//			acceptor.accept(createCompletionProposal("having",context));
//		}
//		
////		public void completeFunction_Prototype_Target_Ref_Name(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
////			acceptor.accept(createCompletionProposal("with",context));
////			acceptor.accept(createCompletionProposal("having",context));
////		}
//		
	
//		public void completeEA_Numerical_Verb(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
//			acceptor.accept(createCompletionProposal("with",context));
//			acceptor.accept(createCompletionProposal("having",context));
//		}
		
//		public void completeUnit_Ref_Name(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
//			acceptor.accept(createCompletionProposal('"'+"The unit of data is"+'"',context));
//		}
	 
	 public void completeTiming_Uuid(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
		 acceptor.accept(createCompletionProposal('"'+"c17aaf45-ecd5-453e-bc20-eb9c9976db5e"+'"',context));
		}
	 
//	 public void completeScope_Ref_Type(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
//		 acceptor.accept(createCompletionProposal('"'+"EVENT-CHAIN"+'"',context));
//		}
	 
//	 public void completeTarget_Ref_Type(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
//		 acceptor.accept(createCompletionProposal('"'+"EVENT-FUNCTION-FLOW-PORT"+'"',context));
//		}
//	 
//	 public void completeSource_Ref_Type(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
//		 acceptor.accept(createCompletionProposal('"'+"EVENT-FUNCTION-FLOW-PORT"+'"',context));
//		}
	 
//	 public void completePeriodic_Constraint_Uuid(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
//		 acceptor.accept(createCompletionProposal('"'+""+'"',context));
//		}
	 
//	 public void completeEvent_Ref_Type(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
//		 acceptor.accept(createCompletionProposal('"'+"EVENT-FUNCTION"+'"',context));
//		}
//	 public void completeStart_Ref_Type(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
//		 acceptor.accept(createCompletionProposal('"'+"EVENT-FUNCTION"+'"',context));
//		}
//	 public void completeType_Tref_Type(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
//		 acceptor.accept(createCompletionProposal('"'+"EA-NUMERICAL"+'"',context));
//		}
	 
//	 public void completeEvent_Chain_Uuid(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
//		 acceptor.accept(createCompletionProposal('"'+""+'"',context));
//		}
	 
//	 public void completeResponse_Ref_Type(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
//		 acceptor.accept(createCompletionProposal('"'+"EVENT-FUNCTION-FLOW-PORT"+'"',context));
//		}
//	 
//	 public void completeStimulus_Ref_Type(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
//		 acceptor.accept(createCompletionProposal('"'+"EVENT-FUNCTION-FLOW-PORT"+'"',context));
//		}
//	 
//	 public void completeFunction_Flow_Port_Ref_Type(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
//		 acceptor.accept(createCompletionProposal('"'+"FUNCTION-FLOW-PORT"+'"',context));
//		}
//	 
//	 public void completeFunction_Prototype_Ref_Type(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
//		 acceptor.accept(createCompletionProposal('"'+"DESIGN-FUNCTION-PROTOTYPE"+'"',context));
//		}
	 
//	 public void completeEvent_Function_Uuid(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
//		 acceptor.accept(createCompletionProposal('"'+""+'"',context));
//		}
	 
//	 public void completeFunction_Type_Ref_Type(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
//		 acceptor.accept(createCompletionProposal('"'+"LOCAL-DEVICE-MANAGER"+'"',context));
//		 acceptor.accept(createCompletionProposal('"'+"BASIC-SOFTWARE-FUNCTION-TYPE"+'"',context));
//		 acceptor.accept(createCompletionProposal('"'+"HARDWARE-FUNCTION-TYPE"+'"',context));
//		 acceptor.accept(createCompletionProposal('"'+"DESIGN-FUNCTION-TYPE "+'"',context));
//		}
	 
//	 public void completeFunction_Prototype_Target_Ref_Type(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
//		 acceptor.accept(createCompletionProposal('"'+"DESIGN-FUNCTION-PROTOTYPE"+'"',context));
//		}
//	 
//	 public void completeFunction_Prototype_Context_Ref_Type(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
//		 acceptor.accept(createCompletionProposal('"'+"DESIGN-FUNCTION-PROTOTYPE"+'"',context));
//		}
//	 
//	 public void completeQuantity_ref_Type(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
//		 acceptor.accept(createCompletionProposal('"'+"QUANTITY"+'"',context));
//		}
//	 
//	 public void completeEA_Numerical_Uuid(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
//		 acceptor.accept(createCompletionProposal('"'+""+'"',context));
//		}
//	 
//	 public void completeUnit_Ref_Type(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
//		 acceptor.accept(createCompletionProposal('"'+"UNIT"+'"',context));
//		}
	 
	public void completeEA_Numerical_Data_unit(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
	arr = t.parse();
	for (int j = 0; j < arr.get(11).size(); j++) {
	acceptor.accept(createCompletionProposal('"'+arr.get(11).get(j)+'"',context));
			// System.out.println("array item "+arr.get(i).get(j));
	}  
	acceptor.accept(createCompletionProposal('"'+"/Extension/Extensions/Timing/TimingDataType/Customized"+'"',context));
	}
	
	public void completeAge_Constraint_Scope(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
		arr = t.parse();
		for (int j = 0; j < arr.get(9).size(); j++) {
		acceptor.accept(createCompletionProposal('"'+arr.get(9).get(j)+'"',context));
				// System.out.println("array item "+arr.get(i).get(j));
		} 
		acceptor.accept(createCompletionProposal('"'+"/Extension/Extensions/Timing/TimingRequirements/Customized"+'"',context)); 
	}
	
	public void completeDelay_Constraint_Target(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
		arr = t.parse();
		for (int j = 0; j < arr.get(6).size(); j++) {
		acceptor.accept(createCompletionProposal('"'+arr.get(6).get(j)+'"',context));
				// System.out.println("array item "+arr.get(i).get(j));
		}
		acceptor.accept(createCompletionProposal('"'+"/Extension/Extensions/Timing/TimingRequirements/Customized"+'"',context)); 
	}
	public void completeDelay_Constraint_Source(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
		arr = t.parse();
		for (int j = 0; j < arr.get(6).size(); j++) {
		acceptor.accept(createCompletionProposal('"'+arr.get(6).get(j)+'"',context));
				// System.out.println("array item "+arr.get(i).get(j));
		} 
		acceptor.accept(createCompletionProposal('"'+"/Extension/Extensions/Timing/TimingRequirements/Customized"+'"',context)); 
	}
	public void completePeriodic_Constraint_Event(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
		arr = t.parse();
		for (int j = 0; j < arr.get(5).size(); j++) {
		acceptor.accept(createCompletionProposal('"'+arr.get(5).get(j)+'"',context));
				// System.out.println("array item "+arr.get(i).get(j));
		} 
		acceptor.accept(createCompletionProposal('"'+"/Extension/Extensions/Timing/Timing/Customized"+'"',context));
		
	}
	public void completeExecution_Time_Constraint_Start(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
		arr = t.parse();
		for (int j = 0; j < arr.get(5).size(); j++) {
		acceptor.accept(createCompletionProposal('"'+arr.get(5).get(j)+'"',context));
				// System.out.println("array item "+arr.get(i).get(j));
		} acceptor.accept(createCompletionProposal('"'+"/Extension/Extensions/Timing/Timing/Customized"+'"',context));
		
	}
	
	public void completeExecution_Time_Constraint_Stop(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
		arr = t.parse();
		for (int j = 0; j < arr.get(5).size(); j++) {
		acceptor.accept(createCompletionProposal('"'+arr.get(5).get(j)+'"',context));
				// System.out.println("array item "+arr.get(i).get(j));
		} acceptor.accept(createCompletionProposal('"'+"/Extension/Extensions/Timing/Timing/Customized"+'"',context));
		
	}
	public void completePeriodic_Constraint_Type(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
		arr = t.parse();
		for (int j = 0; j < arr.get(1).size(); j++) {
		acceptor.accept(createCompletionProposal('"'+arr.get(1).get(j)+'"',context));
				// System.out.println("array item "+arr.get(i).get(j));
		}
		acceptor.accept(createCompletionProposal('"'+"/Extension/Extensions/Timing/TimingDataType/Customized"+'"',context));
		
	}
	public void completeEvent_Chain_Response(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
		arr = t.parse();
		for (int j = 0; j < arr.get(6).size(); j++) {
		acceptor.accept(createCompletionProposal('"'+arr.get(6).get(j)+'"',context));
				// System.out.println("array item "+arr.get(i).get(j));
		} 
		acceptor.accept(createCompletionProposal('"'+"/Extension/Extensions/Timing/TimingRequirements/Customized"+'"',context)); 
	}
	public void completeEvent_Chain_Stimulus(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
		arr = t.parse();
		for (int j = 0; j < arr.get(6).size(); j++) {
		acceptor.accept(createCompletionProposal('"'+arr.get(6).get(j)+'"',context));
				// System.out.println("array item "+arr.get(i).get(j));
		} 
		acceptor.accept(createCompletionProposal('"'+"/Extension/Extensions/Timing/TimingRequirements/Customized"+'"',context)); 
	}
	public void completeEvent_Function_Flow_Port_Func_flow_port(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
		arr = t.parse();
		for (int j = 0; j < arr.get(4).size(); j++) {
		acceptor.accept(createCompletionProposal('"'+arr.get(4).get(j)+'"',context));
				// System.out.println("array item "+arr.get(i).get(j));
		} 
	}
	public void completeEvent_Function_Flow_Port_Func_prototype(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
		arr = t.parse();
		for (int j = 0; j < arr.get(0).size(); j++) {
		acceptor.accept(createCompletionProposal('"'+arr.get(0).get(j)+'"',context));
				// System.out.println("array item "+arr.get(i).get(j));
		} 
	}
	public void completeEvent_Function_Func_value(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
		arr = t.parse();
		for (int j = 0; j < arr.get(2).size(); j++) {
		acceptor.accept(createCompletionProposal('"'+arr.get(2).get(j)+'"',context));
				// System.out.println("array item "+arr.get(i).get(j));
		} 
		for (int j = 0; j < arr.get(3).size(); j++) {
			acceptor.accept(createCompletionProposal('"'+arr.get(3).get(j)+'"',context));
					// System.out.println("array item "+arr.get(i).get(j));
			} 
		for (int j = 0; j < arr.get(7).size(); j++) {
			acceptor.accept(createCompletionProposal('"'+arr.get(7).get(j)+'"',context));
					// System.out.println("array item "+arr.get(i).get(j));
			} 
		for (int j = 0; j < arr.get(8).size(); j++) {
			acceptor.accept(createCompletionProposal('"'+arr.get(8).get(j)+'"',context));
					// System.out.println("array item "+arr.get(i).get(j));
			} 
	}
	public void completeEvent_Function_Func_prototype_target(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
		arr = t.parse();
		for (int j = 0; j < arr.get(0).size(); j++) {
		acceptor.accept(createCompletionProposal('"'+arr.get(0).get(j)+'"',context));
				// System.out.println("array item "+arr.get(i).get(j));
		} 
	}
	
	public void completeEvent_Function_Func_prototype_context(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
		arr = t.parse();
		for (int j = 0; j < arr.get(0).size(); j++) {
		acceptor.accept(createCompletionProposal('"'+arr.get(0).get(j)+'"',context));
				// System.out.println("array item "+arr.get(i).get(j));
		} 
	}
	
	public void completeUnit_Quantity(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
		arr = t.parse();
		for (int j = 0; j < arr.get(10).size(); j++) {
		acceptor.accept(createCompletionProposal('"'+arr.get(10).get(j)+'"',context));
				// System.out.println("array item "+arr.get(i).get(j));
		} 
		acceptor.accept(createCompletionProposal('"'+"/Extension/Extensions/Timing/TimingDataType/Customized"+'"',context));
		
	}
}
